services:
  postgres:
    image: postgres:15
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./VKR/db_data:/var/lib/postgresql/data

  auth-service:
    build: ./VKR/auth-service
    env_file:
      - ./.env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      BOT_TOKEN: ${BOT_TOKEN}
      CORS_ORIGINS: http://localhost:8080
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  whisper-service:
    build: ./VKR/whisper-service
    restart: unless-stopped

  telegram-bot:
    build: ./VKR/telegram-bot
    container_name: telegram-bot
    env_file:
      - ./.env
    environment:
      BACKEND_URL: http://auth-service:8000
    depends_on:
      - auth-service
    restart: unless-stopped

  frontend:
    build: ./calendar-frontend
    restart: unless-stopped

  gateway:
    image: nginx:1.27-alpine
    volumes:
      - ./gateway-nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"       # снаружи 8080 → внутри 80
    depends_on:
      - frontend
      - auth-service
      - whisper-service
    restart: unless-stopped
